'From Pharo0.1 of 16 May 2008 [Latest update: #10204] on 28 January 2010 at 10:09:31 pm'!ByteArray variableByteSubclass: #ExternalAddress	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'FFI-Kernel'!!ExternalAddress commentStamp: '<historical>' prior: 0!An ExternalAddress is an opaque handle to objects outside Smalltalk memory (e.g., a pointer).!!ExternalAddress methodsFor: 'private' stamp: 'ar 1/28/2000 17:45'!asByteArrayPointer	"Return a ByteArray describing a pointer to the contents of the receiver."	^(ByteArray new: 4)		byteAt: 1 put: (self basicAt: 1);		byteAt: 2 put: (self basicAt: 2);		byteAt: 3 put: (self basicAt: 3);		byteAt: 4 put: (self basicAt: 4);	yourself! !!ExternalAddress methodsFor: 'converting' stamp: 'bf 2/21/2001 23:50'!asInteger	"convert address to integer"	^ self asByteArrayPointer unsignedLongAt: 1! !!ExternalAddress methodsFor: 'converting' stamp: 'bf 2/21/2001 23:50'!fromInteger: address	"set my handle to point at address."	"Do we really need this? bf 2/21/2001 23:48"	| pointer |	pointer := ByteArray new: 4.	pointer unsignedLongAt: 1 put: address.	self basicAt: 1 put: (pointer byteAt: 1);		basicAt: 2 put: (pointer byteAt: 2);		basicAt: 3 put: (pointer byteAt: 3);		basicAt: 4 put: (pointer byteAt: 4)! !!ExternalAddress methodsFor: 'initialize-release' stamp: 'ar 11/22/1999 04:25'!beNull	"Make the receiver a NULL pointer"	self atAllPut: 0.! !!ExternalAddress methodsFor: 'initialize-release' stamp: 'nice 5/19/2006 03:17'!finalize	"I am an executor (a copy) of an ExternalAddress that was just garbage collected.	I must finalize. my mission is to free memory"		self free! !!ExternalAddress methodsFor: 'initialize-release' stamp: 'ar 11/28/1999 23:40'!free	"Primitive. Free the object pointed to on the external heap.	Dangerous - may break your system if the receiver hasn't been	allocated by ExternalAddress class>>allocate:. No checks are done."	<primitive:'primitiveFFIFree' module:'SqueakFFIPrims'>	^self primitiveFailed! !!ExternalAddress methodsFor: 'accessing' stamp: 'ar 11/21/1999 15:43'!byteAt: byteOffset	"Go through a different primitive since the receiver describes data in the outside world"	^self unsignedByteAt: byteOffset! !!ExternalAddress methodsFor: 'accessing' stamp: 'ar 11/21/1999 15:43'!byteAt: byteOffset put: value	"Go through a different primitive since the receiver describes data in the outside world"	^self unsignedByteAt: byteOffset put: value! !!ExternalAddress methodsFor: 'accessing' stamp: 'ar 11/28/1999 23:09'!isExternalAddress	"Return true if the receiver describes an object in the outside world"	^true! !!ExternalAddress methodsFor: 'printing' stamp: 'laza 3/29/2004 18:33'!printOn: aStream	"print this as a hex address ('@ 16rFFFFFFFF') to distinguish it from ByteArrays"	aStream nextPutAll: '@ '; nextPutAll: (self asInteger storeStringBase: 16 length: 11 padded: true)! !!ExternalAddress methodsFor: 'copying' stamp: 'ar 5/23/2006 13:09'!shallowCopy	"Re-implemented to avoid superclass call to #new:"	^self clone! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ExternalAddress class	instanceVariableNames: ''!!ExternalAddress class methodsFor: 'instance creation' stamp: 'ar 11/28/1999 23:20'!allocate: byteSize	"Primitive. Allocate an object on the external heap."	<primitive:'primitiveFFIAllocate' module:'SqueakFFIPrims'>	^self primitiveFailed! !!ExternalAddress class methodsFor: 'instance creation' stamp: 'nice 5/19/2006 03:24'!gcallocate: byteSize	"Primitive. Allocate an object on the external heap.	The external memory will be freed when i am garbage collected.	BEWARE: there should be no copy of self, nor any pointer to a sub part..."		| externalAddress |	externalAddress := self allocate: byteSize.	self finalizationRegistry add: externalAddress.	^externalAddress! !!ExternalAddress class methodsFor: 'instance creation' stamp: 'ar 11/21/1999 15:44'!new	"External addresses are always 4 bytes long"	^super new: 4! !!ExternalAddress class methodsFor: 'instance creation' stamp: 'ar 11/21/1999 15:44'!new: n	"You better don't try this..."	^self shouldNotImplement! !!ExternalAddress class methodsFor: '*iPhoneWikiServer-override' stamp: 'John M McIntosh 9/13/2009 21:13'!startUp: resuming	IPhoneWikiServerUI isiPhone ifTrue: [^self].	resuming ifTrue:[self allInstancesDo:[:addr| addr beNull]].! !